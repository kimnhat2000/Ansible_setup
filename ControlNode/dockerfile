# Ubuntu image latest
FROM ubuntu:latest

# Disable interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages that have curl, git, and build-essential before they are used
RUN apt-get update && \
    apt-get install -y software-properties-common curl git build-essential && \
    apt-add-repository --yes --update ppa:ansible/ansible && \
    apt-get install -y openssh-server openssh-client net-tools gnupg2 ansible sshpass sudo nano && \
    apt-get clean

# Install Homebrew
RUN /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Add Homebrew to the PATH
ENV PATH="/home/linuxbrew/.linuxbrew/bin:${PATH}"

# Create the "Integrations" user
RUN useradd -m -s /bin/bash Integrations

# Set the password for the "Integrations" user (change as needed)
RUN echo 'Integrations:1234' | chpasswd

# Generate an SSH key for the "Integrations" user
RUN mkdir -p /home/Integrations/.ssh && \
    ssh-keygen -t rsa -f /home/Integrations/.ssh/id_rsa -N ""

# Set correct permissions for the "Integrations" home directory
RUN chown -R Integrations:Integrations /home/Integrations

# Configure SSH to allow password and key-based authentication
RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config && \
    echo 'AllowUsers Integrations' >> /etc/ssh/sshd_config

# Add the "Integrations" user to the sudo group
RUN usermod -aG sudo Integrations

# Allow the "Integrations" user to run commands with sudo without a password prompt
RUN echo "Integrations ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/Integrations

# Optional tool to make terminals look more pleasant
# Install oh-my-posh (as the "Integrations" user)
RUN brew install jandedobbeleer/oh-my-posh/oh-my-posh 

# Add command to ~/.bashrc (for the "Integrations" user)
RUN echo 'eval "$(oh-my-posh init bash --config /mytheme.json)"' >> /home/Integrations/.bashrc

# Switch back to the root user
USER root

# Add 1Password CLI
RUN curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" | tee /etc/apt/sources.list.d/1password.list

RUN mkdir -p /etc/debsig/policies/AC2D62742012EA22/ && \
    curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | tee /etc/debsig/policies/AC2D62742012EA22/1password.pol && \
    mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22 && \
    curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

RUN apt update && apt install -y 1password-cli

# Create the privilege separation directory
RUN mkdir -p /run/sshd

# Copy the mytheme.json file from the host to the container
COPY mytheme.json /

# Copy ansible cfg file
COPY .ansible.cfg /home/Integrations/

# Start SSH server as a service
CMD ["/usr/sbin/sshd", "-D"]